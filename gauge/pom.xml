<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.sitture</groupId>
    <artifactId>docker-gauge-cd</artifactId>
    <version>1.0</version>

    <name>Docker Gauge Example</name>
    <description>Sample Project to run gauge-java tests within docker container.</description>
    <url>https://git.bskyb.com/ssdm/example-regression-pack</url>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
		<gauge.java.version>LATEST</gauge.java.version>
		<gauge.maven.plugin.version>1.3.1</gauge.maven.plugin.version>
		<selenium.version>3.12.0</selenium.version>
		<phantomjs.version>1.4.4</phantomjs.version>
		<browser.location>${project.basedir}/resources/drivers</browser.location>
		<lazerycode.selenium.version>1.0.13</lazerycode.selenium.version>
		<overwrite.binaries>false</overwrite.binaries>
		<specs>specs</specs>
		<env>default</env>
		<tags></tags>
    </properties>

    <dependencies>
        <dependency>
            <groupId>com.thoughtworks.gauge</groupId>
            <artifactId>gauge-java</artifactId>
            <version>${gauge.java.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.12</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.seleniumhq.selenium</groupId>
            <artifactId>selenium-java</artifactId>
            <version>${selenium.version}</version>
        </dependency>
        <dependency>
            <groupId>org.seleniumhq.selenium</groupId>
            <artifactId>selenium-remote-driver</artifactId>
            <version>${selenium.version}</version>
        </dependency>
        <dependency>
            <groupId>com.codeborne</groupId>
            <artifactId>phantomjsdriver</artifactId>
            <version>${phantomjs.version}</version>
            <scope>test</scope>
        </dependency>
		<dependency>
			<groupId>xml-apis</groupId>
			<artifactId>xml-apis</artifactId>
			<version>1.4.01</version>
		</dependency>
		<dependency>
		    <groupId>com.mashape.unirest</groupId>
		    <artifactId>unirest-java</artifactId>
		    <version>1.4.6</version>
		</dependency>
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.17</version>
		</dependency>
    </dependencies>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.3</version>
                    <configuration>
                        <source>${java.version}</source>
                        <target>${java.version}</target>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>

    <profiles>
        <profile>
            <id>docker</id>
            <activation>
                <property>
                    <name>local</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.lazerycode.selenium</groupId>
                        <artifactId>driver-binary-downloader-maven-plugin</artifactId>
                        <version>${lazerycode.selenium.version}</version>
                        <configuration>
                            <rootStandaloneServerDirectory>${browser.location}</rootStandaloneServerDirectory>
                            <downloadedZipFileDirectory>${browser.location}/zips</downloadedZipFileDirectory>
                            <customRepositoryMap>${project.basedir}/src/test/resources/RepositoryMap.xml</customRepositoryMap>
                            <onlyGetDriversForHostOperatingSystem>true</onlyGetDriversForHostOperatingSystem>
                            <throwExceptionIfSpecifiedVersionIsNotFound>true</throwExceptionIfSpecifiedVersionIsNotFound>
                            <fileDownloadRetryAttempts>3</fileDownloadRetryAttempts>
                            <fileDownloadConnectTimeout>20000</fileDownloadConnectTimeout>
                            <fileDownloadReadTimeout>20000</fileDownloadReadTimeout>
                            <checkFileHashes>false</checkFileHashes>
                        </configuration>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>selenium</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>gauge</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.thoughtworks.gauge.maven</groupId>
                        <artifactId>gauge-maven-plugin</artifactId>
                        <version>${gauge.maven.plugin.version}</version>
                        <executions>
                            <execution>
                                <phase>test</phase>
                                <configuration>
                                    <flags>
                                        <param>--verbose</param>
                                        <param>--simple-console</param>
                                    </flags>
                                    <env>${env}</env>
                                    <specsDir>${specs}</specsDir>
                                    <tags>${tags}</tags>
                                </configuration>
                                <goals>
                                    <goal>execute</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

</project>
